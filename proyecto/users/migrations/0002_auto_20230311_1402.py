# Generated by Django 3.1.2 on 2023-03-11 13:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_player1', to=settings.AUTH_USER_MODEL)),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_player2', to=settings.AUTH_USER_MODEL)),
                ('player3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_player3', to=settings.AUTH_USER_MODEL)),
                ('player4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_player4', to=settings.AUTH_USER_MODEL)),
                ('player5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_player5', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='friends',
            field=models.ManyToManyField(related_name='friends', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='profile',
            name='is_online',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='looking_for_group',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantAssists',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantBodyshots',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantCalculatedElo',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantCurrentRR',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantDeaths',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantHeadshots',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantKills',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantLeague',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantName',
            field=models.TextField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantRangue',
            field=models.TextField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantRegion',
            field=models.TextField(blank=True, choices=[('NA', 'NA'), ('EU', 'EU'), ('AP', 'AP'), ('KR', 'KR')]),
        ),
        migrations.AddField(
            model_name='profile',
            name='valorantTagline',
            field=models.TextField(blank=True, max_length=7),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('open', 'open'), ('in progress', 'in progress'), ('completed', 'completed')], default='open', max_length=20)),
                ('teams', models.ManyToManyField(to='users.Team')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tournament_winner', to='users.team')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('O', 'Octavos de final'), ('Q', 'Cuartos de final'), ('SF', 'Semifinales'), ('F', 'Final')], default='O', max_length=2)),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team1_matches', to='users.team')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team2_matches', to='users.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='users.tournament')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_matches', to='users.team')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_requests_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_requests_sent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
